require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const notion = require('./notion');
const addMedicineHandler = require('./handlers/addMedicine');
const useMedicineHandler = require('./handlers/useMedicine');
const replenishMedicineHandler = require('./handlers/replenishMedicine');
const deleteMedicineHandler = require('./handlers/deleteMedicine'); // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
const checkInventoryHandler = require('./handlers/checkInventory'); // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
const searchMedicineHandler = require('./handlers/searchMedicine');

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

const userState = {};

const mainKeyboard = {
    reply_markup: {
        keyboard: [
            ['‚ûï –î–æ–¥–∞—Ç–∏ –ª—ñ–∫–∏', '‚ûñ –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –ª—ñ–∫–∏', 'üîÑ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –∞–ø—Ç–µ—á–∫—É'],
            ['üîç –ü–æ—à—É–∫ –≤ –∞–ø—Ç–µ—á—Ü—ñ', 'üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç', '‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–ø—Ç–µ—á–∫—É']
        ],
        resize_keyboard: true
    }
};

bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    userState[chatId] = { step: '–æ—á—ñ–∫—É–≤–∞–Ω–Ω—è_–¥—ñ—ó' };
    bot.sendMessage(chatId, 'üíä –©–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏?', mainKeyboard);
});

bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', text); // –î–æ–¥–∞–π—Ç–µ —Ü–µ–π —Ä—è–¥–æ–∫

    if (text === '‚ûï –î–æ–¥–∞—Ç–∏ –ª—ñ–∫–∏') {
        addMedicineHandler(bot, msg, userState, notion, mainKeyboard);
        return;
    }

    if (msg.text === '‚ûñ –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –ª—ñ–∫–∏') {
        await useMedicineHandler(bot, msg, userState, notion, mainKeyboard);
        return;
    }

    if (text === 'üîÑ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –∞–ø—Ç–µ—á–∫—É') {
        replenishMedicineHandler(bot, msg, userState, notion, mainKeyboard);
        return;
    }

    if (text === 'üîç –ü–æ—à—É–∫ –≤ –∞–ø—Ç–µ—á—Ü—ñ') {
        await searchMedicineHandler(bot, msg, userState, notion, mainKeyboard);
        return;
    }
    

    if (text === 'üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç') {
        deleteMedicineHandler(bot, msg, userState, notion, mainKeyboard); // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        return;
    }

    if (text === '‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–ø—Ç–µ—á–∫—É') {
        checkInventoryHandler(bot, msg, userState, notion, mainKeyboard); // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        return;
    }

    // –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if (userState[chatId]?.step) {
        switch (userState[chatId].step) {
            case '–Ω–∞–∑–≤–∞':
            case '–≤—ñ–¥–ß–æ–≥–æ':
            case '–¥–∞—Ç–∞':
            case '—Ç–∏–ø':
            case '–∫—ñ–ª—å–∫—ñ—Å—Ç—å':
                addMedicineHandler(bot, msg, userState, notion, mainKeyboard);
                break;
            case '–≤–≤–µ–¥–µ–Ω–Ω—è_–∫—ñ–ª—å–∫–æ—Å—Ç—ñ_–¥–ª—è_–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è':
                useMedicineHandler(bot, msg, userState, notion, mainKeyboard);
                break;
            case '–≤–≤–µ–¥–µ–Ω–Ω—è_–¥–∞—Ç–∏_–ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è':
            case '–≤–≤–µ–¥–µ–Ω–Ω—è_–∫—ñ–ª—å–∫–æ—Å—Ç—ñ_–ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è':
                replenishMedicineHandler(bot, msg, userState, notion, mainKeyboard);
                break;
            // –î–æ–¥–∞–º–æ –æ–±—Ä–æ–±–∫—É —Å—Ç–∞–Ω—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è, —è–∫—â–æ –±—É–¥–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
            case '–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è_–≤–∏–¥–∞–ª–µ–Ω–Ω—è':
                deleteMedicineHandler(bot, msg, userState, notion, mainKeyboard);
                break;
            default:
                break;
        }
    }
});

// –û–±—Ä–æ–±–Ω–∏–∫ callback_query
bot.on('callback_query', async (callbackQuery) => {
 
    if (callbackQuery.data && callbackQuery.data.startsWith('use_')) {
        useMedicineHandler(bot, callbackQuery, userState, notion, mainKeyboard);
    }
    if (callbackQuery.data && callbackQuery.data.startsWith('replenish_')) {
        replenishMedicineHandler(bot, callbackQuery, userState, notion, mainKeyboard);
    }
    // –î–æ–¥–∞–º–æ –æ–±—Ä–æ–±–∫—É callback_query –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —è–∫—â–æ –±—É–¥–µ —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞
    if (callbackQuery.data && callbackQuery.data.startsWith('delete_')) {
        deleteMedicineHandler(bot, callbackQuery, userState, notion, mainKeyboard);
    }

    if (callbackQuery.data && callbackQuery.data.startsWith('search_medicine')) {
        searchMedicineHandler(bot, callbackQuery, userState, notion, mainKeyboard);
    }
    if ( callbackQuery.data === 'search_by_category') {
        searchMedicineHandler(bot, callbackQuery, userState, notion, mainKeyboard);
    }
    if (callbackQuery.data && callbackQuery.data.startsWith('category_')) {
        await searchMedicineHandler(bot, callbackQuery, userState, notion, mainKeyboard);
    }
    
    if (callbackQuery.data && callbackQuery.data === 'check_inventory') {
        checkInventoryHandler(bot, callbackQuery, userState, notion, mainKeyboard);
    }
});