const handleDeleteMedicine = async (bot, receivedObject, userState, notion, mainKeyboard) => {
    let chatId;
    let data;
    let text;

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ chatId –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É –æ–±'—î–∫—Ç–∞
    if (receivedObject.data && receivedObject.message) {
        chatId = receivedObject.message.chat.id;
        data = receivedObject.data;
    } else if (receivedObject.chat && receivedObject.text) {
        chatId = receivedObject.chat.id;
        text = receivedObject.text;
    } else {
        console.error('üö® –ü–æ–º–∏–ª–∫–∞: –û—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ–≤—ñ–¥–æ–º–∏–π –æ–±‚Äô—î–∫—Ç —É handleDeleteMedicine:', receivedObject);
        return;
    }

    if (text === 'üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç') {
        try {
            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø—Ä–∏—Ö–æ–≤–∞–Ω–Ω—è–º –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
            await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–ø–∞—Ä–∞—Ç –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è...', { reply_markup: { remove_keyboard: true } });

            const response = await notion.databases.query({
                database_id: process.env.NOTION_DATABASE_ID,
            });

            if (response.results && response.results.length > 0) {
                const medicinesKeyboard = {
                    inline_keyboard: response.results
                        .map(medicine => {
                            const titleProperty = medicine.properties['–ù–∞–∑–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç—É'];
                            const expiryDateProperty = medicine.properties['–î–∞—Ç–∞ –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ'];
                            if (titleProperty && titleProperty.title && titleProperty.title.length > 0) {
                                const medicineName = titleProperty.title[0].plain_text;
                                const expiryDate = expiryDateProperty?.date?.start ? ` (${expiryDateProperty.date.start.split('-').reverse().join('-')})` : ' (—Ç–µ—Ä–º—ñ–Ω –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ)';
                                return [
                                    {
                                        text: `${medicineName}${expiryDate}`,
                                        callback_data: `delete_confirm_${medicine.id}`
                                    }
                                ];
                            }
                            return null;
                        })
                        .filter(row => row !== null)
                };

                if (medicinesKeyboard.inline_keyboard.length > 0) {
                    return bot.sendMessage(chatId, 'üóëÔ∏è –û–±–µ—Ä–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç, —è–∫–∏–π –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏:', { reply_markup: medicinesKeyboard });
                } else {
                    return bot.sendMessage(chatId, 'üíä –í –∞–ø—Ç–µ—á—Ü—ñ –Ω–µ–º–∞—î –∂–æ–¥–Ω–∏—Ö –ª—ñ–∫—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è.', mainKeyboard);
                }

            } else {
                return bot.sendMessage(chatId, 'üíä –í –∞–ø—Ç–µ—á—Ü—ñ –Ω–µ–º–∞—î –∂–æ–¥–Ω–∏—Ö –ª—ñ–∫—ñ–≤.', mainKeyboard);
            }
        } catch (error) {
            console.error('üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å–ø–∏—Å–∫—É –ª—ñ–∫—ñ–≤ –∑ Notion:', error.message);
            return bot.sendMessage(chatId, `‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å–ø–∏—Å–∫—É –ª—ñ–∫—ñ–≤: ${error.message}`, mainKeyboard);
        }
        return;
    }

    if (data && data.startsWith('delete_confirm_')) {
        const medicineId = data.split('_')[2]; // –û—Ç—Ä–∏–º—É—î–º–æ ID –ø—Ä–µ–ø–∞—Ä–∞—Ç—É
        try {
            const medicine = await notion.pages.retrieve({ page_id: medicineId });
            if (medicine && medicine.properties) {
                const medicineName = medicine.properties['–ù–∞–∑–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç—É'].title[0].plain_text;
                const expiryDateProperty = medicine.properties['–î–∞—Ç–∞ –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ'];
                const expiryDateFormatted = expiryDateProperty?.date?.start ? `(${expiryDateProperty.date.start.split('-').reverse().join('-')})` : '–Ω–µ –≤–∫–∞–∑–∞–Ω–∞';

                userState[chatId] = { step: '–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è_–≤–∏–¥–∞–ª–µ–Ω–Ω—è', medicineId };
                const confirmationKeyboard = {
                    inline_keyboard: [
                        [
                            { text: '–¢–∞–∫', callback_data: `delete_yes_${medicineId}` },
                            { text: '–ù—ñ', callback_data: 'delete_no' }
                        ]
                    ]
                };
                
                return bot.sendMessage(chatId, `‚ö†Ô∏è –í–∏ —Ç–æ—á–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç *${medicineName}* ${expiryDateFormatted}?`, {
                    parse_mode: 'Markdown',
                    reply_markup: confirmationKeyboard
                });
                 
                return bot.sendMessage(chatId, 'üíä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–±—Ä–∞–Ω–∏–π –ø—Ä–µ–ø–∞—Ä–∞—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.', mainKeyboard);
            }
        } catch (error) {
            console.error('üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ª—ñ–∫–∏ –∑ Notion:', error.message);
            return bot.sendMessage(chatId, `‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ª—ñ–∫–∏: ${error.message}`, mainKeyboard);
        }
        return;
    }

    if (data && data.startsWith('delete_yes_')) {
        const medicineId = data.split('_')[2];
        try {
            await notion.pages.update({
                page_id: medicineId,
                archived: true,
            });
            bot.answerCallbackQuery(receivedObject.id);
            return bot.sendMessage(chatId, `‚úÖ –ü—Ä–µ–ø–∞—Ä–∞—Ç —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∞–ø—Ç–µ—á–∫–∏.`, mainKeyboard);
        } catch (error) {
            console.error('üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –ª—ñ–∫—ñ–≤ –∑ Notion:', error.message);
            return bot.sendMessage(chatId, `‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –ø—Ä–µ–ø–∞—Ä–∞—Ç—É: ${error.message}`, mainKeyboard);
        }
        return;
    }

    if (data === 'delete_no') {
        bot.answerCallbackQuery(receivedObject.id);
        return bot.sendMessage(chatId, '‚úÖ –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.', mainKeyboard);
    }
};

module.exports = handleDeleteMedicine;