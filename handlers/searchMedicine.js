const handleSearchMedicine = async (bot, receivedObject, userState, notion, mainKeyboard) => {
  
    let chatId;
    let data;
    let text;

    if (receivedObject.data && receivedObject.message) {
        chatId = receivedObject.message.chat.id;
        data = receivedObject.data;
    } else if (receivedObject.chat && receivedObject.text) {
        chatId = receivedObject.chat.id;
        text = receivedObject.text;
    } else {
        console.error('üö® –ù–µ–≤—ñ–¥–æ–º–∏–π —Ñ–æ—Ä–º–∞—Ç receivedObject —É handleSearchInPharmacy');
        return;
    }

    // –ö—Ä–æ–∫ 1: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î "üîç –ü–æ—à—É–∫ –≤ –∞–ø—Ç–µ—á—Ü—ñ"
    if (text === 'üîç –ü–æ—à—É–∫ –≤ –∞–ø—Ç–µ—á—Ü—ñ') {
        try {
            const response = await notion.databases.query({
                database_id: process.env.NOTION_DATABASE_ID,
            });

            const allCategories = new Set();

            response.results.forEach(page => {
                const categoryProp = page.properties['–í—ñ–¥ —á–æ–≥–æ'];
                if (categoryProp && categoryProp.multi_select) {
                    categoryProp.multi_select.forEach(cat => {
                        allCategories.add(cat.name);
                    });
                }
            });

            if (allCategories.size === 0) {
                return bot.sendMessage(chatId, '‚ùå –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤ –∞–ø—Ç–µ—á—Ü—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.', mainKeyboard);
            }

            const categoryKeyboard = {
                inline_keyboard: [...allCategories].map(name => [{
                    text: name,
                    callback_data: `category_${name}`
                }])
            };

            return bot.sendMessage(chatId, 'üîç –û–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–ª—è –ø–æ—à—É–∫—É –ª—ñ–∫—ñ–≤:', {
                reply_markup: categoryKeyboard
            });

        } catch (error) {
            console.error('üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∑ Notion:', error.message);
            return bot.sendMessage(chatId, '‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.', mainKeyboard);
        }
    }

    // –ö—Ä–æ–∫ 2: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±—Ä–∞–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
    if (data && data.startsWith('category_')) {
        const selectedCategory = data.replace('category_', '');
        

        try {
           
            const response = await notion.databases.query({
                database_id: process.env.NOTION_DATABASE_ID,
                filter: {
                    property: '–í—ñ–¥ —á–æ–≥–æ',
                    multi_select: {
                        contains: selectedCategory,
                    },
                },
            });
            

            const filteredMedicines = response.results;
 

            if (filteredMedicines.length === 0) {
                return bot.sendMessage(chatId, `‚ùå –ù–µ–º–∞—î –ø—Ä–µ–ø–∞—Ä–∞—Ç—ñ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó *${selectedCategory}*.`, {
                    parse_mode: 'Markdown',
                    reply_markup: mainKeyboard
                });
            }

            const messageText = filteredMedicines.map(page => {
                const nameProp = page.properties['–ù–∞–∑–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç—É'];
                const qtyProp = page.properties['–ö—ñ–ª—å–∫—ñ—Å—Ç—å'];

                const name = nameProp?.title?.[0]?.plain_text || '–ë–µ–∑ –Ω–∞–∑–≤–∏';
                const qty = qtyProp?.number !== undefined ? qtyProp.number : '‚Äî';

                return `üè∑Ô∏è –ù–∞–∑–≤–∞: *${name}*\n#Ô∏è‚É£ –ö—ñ–ª—å–∫—ñ—Å—Ç—å: *${qty} —à—Ç*`;
            }).join('\n\n');

            return bot.sendMessage(chatId, `üíä –ü—Ä–µ–ø–∞—Ä–∞—Ç–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó *${selectedCategory}*:\n\n${messageText}`, {
                parse_mode: 'Markdown',
                reply_markup: mainKeyboard
            });

        } catch (error) {
            console.error('üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É –ø—Ä–µ–ø–∞—Ä–∞—Ç—ñ–≤ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é:', error.message);
            return bot.sendMessage(chatId, '‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É –ø—Ä–µ–ø–∞—Ä–∞—Ç—ñ–≤.', mainKeyboard);
        }
    }
};

module.exports = handleSearchMedicine;