const cron = require('node-cron');
const moment = require('moment');
const notion = require('./notion');
const { getUsers } = require('./handlers/userManager'); // ‚¨ÖÔ∏è –ù–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç
const TelegramBot = require('node-telegram-bot-api');

let botInstance;

const setBotInstance = (bot) => {
    botInstance = bot;
};

const checkExpiryDates = async () => {
    if (!botInstance) {
        console.error('üö® Telegram Bot instance is not set in scheduler.js');
        return;
    }

    const chatIds = getUsers();
    if (!chatIds.length) {
        console.warn('‚ö†Ô∏è –ù–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å.');
        return;
    }

    console.log('‚è∞ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ...');
    try {
        const response = await notion.databases.query({
            database_id: process.env.NOTION_DATABASE_ID,
        });

        const now = moment().startOf('day');
        const oneMonthFromNow = moment().add(1, 'month').endOf('day');

        response.results.forEach(page => {
            const name = page.properties['–ù–∞–∑–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç—É']?.title?.[0]?.plain_text;
            const expiryDateProp = page.properties['–î–∞—Ç–∞ –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ']?.date?.start;

            if (name && expiryDateProp) {
                const expiryDate = moment(expiryDateProp, 'YYYY-MM-DD').startOf('day');

                if (expiryDate.isSameOrBefore(oneMonthFromNow) && expiryDate.isAfter(now)) {
                    const daysRemaining = expiryDate.diff(now, 'days');

                    let message = `‚ö†Ô∏è –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: –¢–µ—Ä–º—ñ–Ω –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ –ø—Ä–µ–ø–∞—Ä–∞—Ç—É *${name}* –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è *${expiryDate.format('DD.MM.YYYY')}*! –ó–∞–ª–∏—à–∏–ª–æ—Å—å *${daysRemaining}* –¥–Ω—ñ–≤.`;

                    if (daysRemaining === 3) {
                        message = `üö® *–¢–µ—Ä–º—ñ–Ω –º–∞–π–∂–µ –≤–∏–π—à–æ–≤!* –ü—Ä–µ–ø–∞—Ä–∞—Ç *${name}* –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è —á–µ—Ä–µ–∑ *3 –¥–Ω—ñ* ‚Äî *${expiryDate.format('DD.MM.YYYY')}*!`;
                    }

                    botInstance.sendMessage(TELEGRAM_CHAT_ID, message, { parse_mode: 'Markdown' });
                }
            }
        });
        console.log('‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.');
    } catch (error) {
        console.error('üö® –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –ø—Ä–∏–¥–∞—Ç–Ω–æ—Å—Ç—ñ:', error);
    }
};

const startScheduler = (bot) => {
    setBotInstance(bot);
    cron.schedule('0 9 * * *', checkExpiryDates, {
        timezone: "Europe/Kiev"
    });
    console.log('üìÖ –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –∑–∞–ø—É—â–µ–Ω–æ (10, 20 —Ç–∞ 30 —á–∏—Å–ª–∞ –∫–æ–∂–Ω–æ–≥–æ –º—ñ—Å—è—è –æ 9:00 –∑–∞ –ö–∏—î–≤–æ–º).');

    checkExpiryDates(); // –ó–∞–ø—É—Å–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
};

module.exports = { startScheduler };
